<fluentWpf:AcrylicWindow x:Class="WinIO.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:fluentWpf="clr-namespace:WinIO.FluentWPF"
        xmlns:dk="clr-namespace:WinIO.AvalonDock" 
        xmlns:layout="clr-namespace:WinIO.AvalonDock.Layout" 
        xmlns:vs2013="clr-namespace:WinIO.Themes.VS2013"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:con="clr-namespace:WinIO.Controls"
        mc:Ignorable="d"
        Title="WinIO 2.0" Height="450" Width="800"
        x:ClassModifier="internal" Icon="splash.png" TitleBarMode="Extend">
    <fluentWpf:AcrylicWindow.TitleBar>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Image Height="24" Width="24" Stretch="UniformToFill" Source="splash.png" Margin="5" RenderOptions.BitmapScalingMode="HighQuality"></Image>
            <StackPanel Grid.Column="1" VerticalAlignment="Center">
                <Menu x:Name="HeadMenu" Style="{StaticResource HeadMenu}">
                    <MenuItem Header="工具">
                        <MenuItem Header="主题设置"></MenuItem>
                        <MenuItem Header="设置"></MenuItem>
                    </MenuItem>
                    <MenuItem Header="窗口">
                        <MenuItem Header="重置"></MenuItem>
                    </MenuItem>
                    <MenuItem Header="帮助"></MenuItem>
                    <MenuItem Header="我的Redmine"></MenuItem>
                </Menu>
            </StackPanel>
            <TextBlock Grid.Column="2" Background="{StaticResource SystemChromeLowColorBrush}" 
                       Text="{Binding Path=Title, RelativeSource={RelativeSource AncestorType=Window}}" 
                       FontWeight="Bold" FontSize="12"
                       VerticalAlignment="Center" Padding="3"></TextBlock>
        </Grid>
    </fluentWpf:AcrylicWindow.TitleBar>

    <Grid x:Name="MainGrid" fluentWpf:PointerTracker.Enabled="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <Menu Name="MainMenu" Style="{StaticResource MenuStyle}"></Menu>

        <dk:DockingManager x:Name = "dockManager"
            Grid.Row = "1"
            Background="Transparent"
            AllowMixedOrientation = "True"
            AutoWindowSizeWhenOpened = "True"
            IsVirtualizingAnchorable = "True"
            IsVirtualizingDocument = "True" >
            <dk:DockingManager.Theme >
                <vs2013:Vs2013DarkTheme ></vs2013:Vs2013DarkTheme >
            </dk:DockingManager.Theme >
            <dk:DockingManager.DocumentHeaderTemplate >
                <DataTemplate >
                    <StackPanel Orientation = "Horizontal" >
                        <Image Margin = "0,0,4,0" Source = "{Binding IconSource}" />
                        <TextBlock Text = "{Binding Title}" FontSize="13" TextTrimming = "CharacterEllipsis" />
                    </StackPanel >
                </DataTemplate >
            </dk:DockingManager.DocumentHeaderTemplate >

            <layout:LayoutRoot>
                <layout:LayoutPanel Orientation = "Horizontal">
                    <layout:LayoutDocumentPaneGroup>
                        <layout:LayoutDocumentPane x:Name = "LayoutDocumentPane">
                            <layout:LayoutDocument Title = "WinIO" ContentId="document1" >
                                <FlowDocumentScrollViewer>
                                    <con:OutputDocument x:Name="MainOutPanel" Grid.Row="0" Background="Transparent">
                                        <Paragraph> <Run Text="tsetes"></Run></Paragraph>
                                        <Paragraph> <Run Text="tsetes2"></Run></Paragraph>
                                        <Paragraph> <Run Text="tsetes3"></Run></Paragraph>
                                        <Paragraph> <Run Text="tsetes4"></Run></Paragraph>
                                        <Paragraph> <Run Text="tsetes5"></Run></Paragraph>
                                    </con:OutputDocument> 
                                </FlowDocumentScrollViewer>
                            </layout:LayoutDocument >

                            <layout:LayoutDocument Title = "Document 2" ContentId="document2">
                                <FlowDocumentScrollViewer Margin="0" Padding="0" Background="Aqua" VerticalScrollBarVisibility="Auto">
                                    
                                <FlowDocument ColumnWidth="400" PagePadding="0" LineHeight="1">
                                    <Paragraph>
                                        <Run>
                                            A UIElement element may be embedded directly in flow content
                                            by enclosing it in an InlineUIContainer element.
                                        </Run>
                                        <LineBreak/>
                                        <LineBreak/>
                                        <InlineUIContainer>
                                            <Button>Click me!</Button>
                                        </InlineUIContainer>
                                        <LineBreak/>
                                        <LineBreak/>
                                        <Run>
                                            The InlineUIContainer element may host no more than one top-level
                                            UIElement.  However, other UIElements may be nested within the
                                            UIElement contained by an InlineUIContainer element.  For example,
                                            a StackPanel can be used to host multiple UIElement elements within
                                            an InlineUIContainer element.
                                        </Run>
                                        <InlineUIContainer>
                                            <StackPanel>
                                                <Label Foreground="Blue">Choose a value:</Label>
                                                <ComboBox>
                                                    <ComboBoxItem IsSelected="True">a</ComboBoxItem>
                                                    <ComboBoxItem>b</ComboBoxItem>
                                                    <ComboBoxItem>c</ComboBoxItem>
                                                </ComboBox>
                                                <Label Foreground ="Red">Choose a value:</Label>
                                                <StackPanel>
                                                    <RadioButton>x</RadioButton>
                                                    <RadioButton>y</RadioButton>
                                                    <RadioButton>z</RadioButton>
                                                </StackPanel>
                                                <Label>Enter a value:</Label>
                                                <TextBox>
                                                    A text editor embedded in flow content.
                                                </TextBox>
                                            </StackPanel>
                                        </InlineUIContainer>
                                    </Paragraph>
                                </FlowDocument>

                                </FlowDocumentScrollViewer>
                            </layout:LayoutDocument >
                        </layout:LayoutDocumentPane >
                    </layout:LayoutDocumentPaneGroup >
                    <layout:LayoutAnchorablePaneGroup DockWidth = "50" >
                        <layout:LayoutAnchorablePane >
                            <layout:LayoutAnchorable
                                     Title = "Tool Window 1"
                                ContentId="toolWindow1" >
                                <StackPanel MinHeight="450">
                                    <TextBox Text="{Binding TestTimer, Mode=OneWay, StringFormat='Tool Window 1 Attached to Timer ->\{0\}'}" />
                                </StackPanel>
                            </layout:LayoutAnchorable >
                            <layout:LayoutAnchorable Title = "Tool Window 2" ContentId="toolWindow2">
                                <TextBlock Text="{Binding FocusedElement}" />
                            </layout:LayoutAnchorable >
                        </layout:LayoutAnchorablePane >
                    </layout:LayoutAnchorablePaneGroup >
                </layout:LayoutPanel >
            </layout:LayoutRoot >
        </dk:DockingManager >
    </Grid>
</fluentWpf:AcrylicWindow>
